<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.crawl.acfun">
		
	</context:component-scan>

	<!-- PropertyPlaceholderConfigurer,用于spring ${placeholder}的解析 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties" ref="applicationProperties" />
	</bean>

	<!-- 应用属性文件读入 -->
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:local-config.properties</value>
				<!-- <value> file:/webser/java_webapps/geek/config/admin-config.properties 
					</value> -->
			</list>
		</property>
	</bean>

	<!-- 配置数据库注解aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- <bean id="manyDataSourceAspect" class="com.stnts.geek.datasource.DataSourceAspect" 
		/> <aop:config> <aop:aspect id="c" ref="manyDataSourceAspect"> <aop:pointcut 
		id="tx" expression="execution(* com.crawl.acfun.service.impl.*.*(..))" /> 
		<aop:before pointcut-ref="tx" method="before"/> </aop:aspect> </aop:config> -->
	<!-- 配置数据库注解aop -->

	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_user}" />
		<property name="password" value="${jdbc_password}" />

		<property name="filters" value="stat" />

		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="20" />
	</bean>


	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/crawl/acfun/mapper/*.xml"></property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注解dao，扫描dao目录下的所有dao -->
		<property name="basePackage" value="com.crawl.acfun.dao" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!-- 配置ibatis的局部事务管理器，使用DataSourceTransactionManager类 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="springPipelineFactory" class="com.geccocrawler.gecco.spring.SpringPipelineFactory"/>

	<bean id="consolePipeline" class="com.geccocrawler.gecco.spring.ConsolePipeline"/>
	
	<bean id="uploaderPipeline" class="com.crawl.acfun.main.UploaderPipeline"></bean>

	
</beans>